[{"data":1,"prerenderedAt":550},["Reactive",2],{"content-query-4XPSPQuXYx":3,"current-commit-sha":542},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":7,"description":5,"body":8,"_type":537,"_id":538,"_source":539,"_file":540,"_extension":541},"/docs","",false,"Installation",{"type":9,"children":10,"toc":524},"root",[11,19,26,32,99,113,119,124,136,142,149,169,178,183,195,207,212,218,235,244,249,255,260,269,275,280,286,298,309,315,320,329,354,360,381,386,441,447,452,491,497,511],{"type":12,"tag":13,"props":14,"children":16},"element","h1",{"id":15},"installation",[17],{"type":18,"value":7},"text",{"type":12,"tag":20,"props":21,"children":23},"h2",{"id":22},"requirements",[24],{"type":18,"value":25},"Requirements",{"type":12,"tag":27,"props":28,"children":29},"p",{},[30],{"type":18,"value":31},"Depending on your project targets, you need at least :",{"type":12,"tag":33,"props":34,"children":35},"ul",{},[36,53,66,71,85],{"type":12,"tag":37,"props":38,"children":39},"li",{},[40,42,51],{"type":18,"value":41},"Android : API level 21 (Android 5.0), which corresponds to minimum Android version supported by Flutter.\nNote that attributes don't work on Android 6.0 and below\n(see ",{"type":12,"tag":43,"props":44,"children":48},"a",{"href":45,"rel":46},"https://issuetracker.google.com/issues/37020436",[47],"nofollow",[49],{"type":18,"value":50},"this ticket",{"type":18,"value":52}," for more details).",{"type":12,"tag":37,"props":54,"children":55},{},[56,58,64],{"type":18,"value":57},"iOS : 13.0, because Bonsoir rely on ",{"type":12,"tag":59,"props":60,"children":61},"code",{"className":5},[62],{"type":18,"value":63},"NWBrowser",{"type":18,"value":65},".",{"type":12,"tag":37,"props":67,"children":68},{},[69],{"type":18,"value":70},"macOS : 10.15 (El Capitan), for the same reason as above.",{"type":12,"tag":37,"props":72,"children":73},{},[74,76,83],{"type":18,"value":75},"Windows : Win 10 (19H1/1903) (Mai 2019 Update).\nThe ",{"type":12,"tag":43,"props":77,"children":80},{"href":78,"rel":79},"https://msdn.microsoft.com/en-us/library/windows.networking.servicediscovery.dnssd.aspx",[47],[81],{"type":18,"value":82},"WIN32 DNS-SD API",{"type":18,"value":84},"\nhas been exposed from, at least, that version.",{"type":12,"tag":37,"props":86,"children":87},{},[88,90,97],{"type":18,"value":89},"Linux : requires ",{"type":12,"tag":43,"props":91,"children":94},{"href":92,"rel":93},"https://www.avahi.org/",[47],[95],{"type":18,"value":96},"Avahi daemon",{"type":18,"value":98},", because Bonsoir uses its D-Bus interface\nfor browsing and registering mDNS/DNS-SD services.",{"type":12,"tag":27,"props":100,"children":101},{},[102,104,111],{"type":18,"value":103},"This plugin ",{"type":12,"tag":43,"props":105,"children":108},{"href":106,"rel":107},"https://stackoverflow.com/a/46926325/3608831",[47],[109],{"type":18,"value":110},"cannot be tested on an Android emulator",{"type":18,"value":112},"\n(well it can, but the only services that you are able to discover are the ones broadcasted by your emulator).",{"type":12,"tag":20,"props":114,"children":116},{"id":115},"depend-on-it",[117],{"type":18,"value":118},"Depend on it",{"type":12,"tag":27,"props":120,"children":121},{},[122],{"type":18,"value":123},"In your Flutter project directory, run the following commands :",{"type":12,"tag":125,"props":126,"children":131},"pre",{"className":127,"code":129,"language":130,"meta":5},[128],"language-shell","flutter pub add bonsoir\nflutter pub get\n","shell",[132],{"type":12,"tag":59,"props":133,"children":134},{"__ignoreMap":5},[135],{"type":18,"value":129},{"type":12,"tag":20,"props":137,"children":139},{"id":138},"additional-instructions",[140],{"type":18,"value":141},"Additional instructions",{"type":12,"tag":143,"props":144,"children":146},"h3",{"id":145},"ios",[147],{"type":18,"value":148},"iOS",{"type":12,"tag":27,"props":150,"children":151},{},[152,154,160,162,167],{"type":18,"value":153},"If you want to use this plugin on iOS, you must update your deployment target to ",{"type":12,"tag":155,"props":156,"children":157},"em",{},[158],{"type":18,"value":159},"at least",{"type":18,"value":161}," 13.0.\nAt the top of ",{"type":12,"tag":59,"props":163,"children":164},{"className":5},[165],{"type":18,"value":166},"ios/Podfile",{"type":18,"value":168},", add the following :",{"type":12,"tag":125,"props":170,"children":173},{"className":171,"code":172,"filename":166,"language":130,"meta":5},[128],"platform :ios, '13.0'\n",[174],{"type":12,"tag":59,"props":175,"children":176},{"__ignoreMap":5},[177],{"type":18,"value":172},{"type":12,"tag":27,"props":179,"children":180},{},[181],{"type":18,"value":182},"Also, open your iOS project in Xcode and select Runner, Targets -> Runner and then the \"General\" tab.\nUnder the \"Minimum Deployments\" section, update the iOS version to 13.0 or higher.",{"type":12,"tag":27,"props":184,"children":185},{},[186,188,193],{"type":18,"value":187},"If you're building your app for iOS 14 or higher, you have to edit your ",{"type":12,"tag":59,"props":189,"children":190},{"className":5},[191],{"type":18,"value":192},"Info.plist",{"type":18,"value":194}," file. Just add\nthe following lines :",{"type":12,"tag":125,"props":196,"children":202},{"className":197,"code":199,"filename":200,"language":201,"meta":5},[198],"language-xml","\u003Ckey>NSLocalNetworkUsageDescription\u003C/key>\n\u003Cstring>Describe here why you want to use Bonsoir.\u003C/string>\n\u003Ckey>NSBonjourServices\u003C/key>\n\u003Carray>\n    \u003Cstring>_first-service._tcp\u003C/string>\n    \u003Cstring>_second-service._tcp\u003C/string>\n    \u003Cstring>_third-service._tcp\u003C/string>\n    \u003C!-- Add more here -->\n\u003C/array>\n","ios/Info.plist","xml",[203],{"type":12,"tag":59,"props":204,"children":205},{"__ignoreMap":5},[206],{"type":18,"value":199},{"type":12,"tag":27,"props":208,"children":209},{},[210],{"type":18,"value":211},"Don't forget to edit them according to your needs.",{"type":12,"tag":143,"props":213,"children":215},{"id":214},"macos",[216],{"type":18,"value":217},"macOS",{"type":12,"tag":27,"props":219,"children":220},{},[221,223,227,229,234],{"type":18,"value":222},"If you want to use this plugin on macOS, you must update your deployment target to ",{"type":12,"tag":155,"props":224,"children":225},{},[226],{"type":18,"value":159},{"type":18,"value":228}," 10.15.\nAt the top of ",{"type":12,"tag":59,"props":230,"children":231},{"className":5},[232],{"type":18,"value":233},"macos/Podfile",{"type":18,"value":168},{"type":12,"tag":125,"props":236,"children":239},{"className":237,"code":238,"filename":233,"language":130,"meta":5},[128],"platform :ios, '10.15'\n",[240],{"type":12,"tag":59,"props":241,"children":242},{"__ignoreMap":5},[243],{"type":18,"value":238},{"type":12,"tag":27,"props":245,"children":246},{},[247],{"type":18,"value":248},"Also, open your macOS project in Xcode and select Runner, Targets -> Runner and then the \"General\" tab.\nUnder the \"Minimum Deployments\" section, update the macOS version to 10.15 or higher.",{"type":12,"tag":143,"props":250,"children":252},{"id":251},"linux",[253],{"type":18,"value":254},"Linux",{"type":12,"tag":27,"props":256,"children":257},{},[258],{"type":18,"value":259},"If you don't have Avahi installed on your system, just install it using :",{"type":12,"tag":125,"props":261,"children":264},{"className":262,"code":263,"language":130,"meta":5},[128],"sudo apt install -y avahi-daemon avahi-discover avahi-utils libnss-mdns mdns-scan\n",[265],{"type":12,"tag":59,"props":266,"children":267},{"__ignoreMap":5},[268],{"type":18,"value":263},{"type":12,"tag":13,"props":270,"children":272},{"id":271},"getting-started",[273],{"type":18,"value":274},"Getting started",{"type":12,"tag":27,"props":276,"children":277},{},[278],{"type":18,"value":279},"Bonsoir has been made to be as easy to use as possible.",{"type":12,"tag":20,"props":281,"children":283},{"id":282},"broadcast-a-service",[284],{"type":18,"value":285},"Broadcast a service",{"type":12,"tag":27,"props":287,"children":288},{},[289,291,296],{"type":18,"value":290},"Here is how you can broadcast your service using ",{"type":12,"tag":155,"props":292,"children":293},{},[294],{"type":18,"value":295},"Bonsoir",{"type":18,"value":297}," :",{"type":12,"tag":125,"props":299,"children":304},{"className":300,"code":302,"language":303,"meta":5},[301],"language-dart","// Let's create our service !\nBonsoirService service = BonsoirService(\n  name: 'My wonderful service', // Put your service name here.\n  type: '_wonderful-service._tcp', // Put your service type here. Syntax : _ServiceType._TransportProtocolName. (see http://wiki.ros.org/zeroconf/Tutorials/Understanding%20Zeroconf%20Service%20Types).\n  port: 3030, // Put your service port here.\n);\n\n// And now we can broadcast it :\nBonsoirBroadcast broadcast = BonsoirBroadcast(service: service);\nawait broadcast.ready;\nawait broadcast.start();\n\n// ...\n\n// Then if you want to stop the broadcast :\nawait broadcast.stop();\n","dart",[305],{"type":12,"tag":59,"props":306,"children":307},{"__ignoreMap":5},[308],{"type":18,"value":302},{"type":12,"tag":20,"props":310,"children":312},{"id":311},"discover-services",[313],{"type":18,"value":314},"Discover services",{"type":12,"tag":27,"props":316,"children":317},{},[318],{"type":18,"value":319},"Here is how you can search for a broadcasted service :",{"type":12,"tag":125,"props":321,"children":324},{"className":322,"code":323,"language":303,"meta":5},[301],"// This is the type of service we're looking for :\nString type = '_wonderful-service._tcp';\n\n// Once defined, we can start the discovery :\nBonsoirDiscovery discovery = BonsoirDiscovery(type: type);\nawait discovery.ready;\n\n// If you want to listen to the discovery :\ndiscovery.eventStream!.listen((event) { // `eventStream` is not null as the discovery instance is \"ready\" !\n  if (event.type == BonsoirDiscoveryEventType.discoveryServiceFound) {\n    print('Service found : ${event.service.toJson()}')\n    event.service!.resolve(discovery.serviceResolver); // Should be called when the user wants to connect to this service.\n  } else if (event.type == BonsoirDiscoveryEventType.discoveryServiceResolved) {\n    print('Service resolved : ${event.service.toJson()}')\n  } else if (event.type == BonsoirDiscoveryEventType.discoveryServiceLost) {\n    print('Service lost : ${event.service.toJson()}')\n  }\n});\n\n// Start the discovery **after** listening to discovery events :\nawait discovery.start();\n\n// Then if you want to stop the discovery :\nawait discovery.stop();\n",[325],{"type":12,"tag":59,"props":326,"children":327},{"__ignoreMap":5},[328],{"type":18,"value":323},{"type":12,"tag":27,"props":330,"children":331},{},[332,338,340,345,347,353],{"type":12,"tag":333,"props":334,"children":335},"strong",{},[336],{"type":18,"value":337},"Note.",{"type":18,"value":339}," If you're transitioning from ",{"type":12,"tag":59,"props":341,"children":342},{"className":5},[343],{"type":18,"value":344},"multicast_dns",{"type":18,"value":346},", note that types don't end with ",{"type":12,"tag":348,"props":349,"children":350},"q",{},[351],{"type":18,"value":352},".local",{"type":18,"value":65},{"type":12,"tag":13,"props":355,"children":357},{"id":356},"in-depth-example",[358],{"type":18,"value":359},"In-depth example",{"type":12,"tag":27,"props":361,"children":362},{},[363,365,370,372,379],{"type":18,"value":364},"If you want a ",{"type":12,"tag":348,"props":366,"children":367},{},[368],{"type":18,"value":369},"full",{"type":18,"value":371}," example, don't hesitate to check\n",{"type":12,"tag":43,"props":373,"children":376},{"href":374,"rel":375},"https://github.com/Skyost/Bonsoir/tree/master/packages/bonsoir/example",[47],[377],{"type":18,"value":378},"this one",{"type":18,"value":380}," on Github.",{"type":12,"tag":27,"props":382,"children":383},{},[384],{"type":18,"value":385},"To run it :",{"type":12,"tag":387,"props":388,"children":389},"ol",{},[390,401,412,423],{"type":12,"tag":37,"props":391,"children":392},{},[393,400],{"type":12,"tag":43,"props":394,"children":397},{"href":395,"rel":396},"https://melos.invertase.dev/~melos-latest/getting-started#installation",[47],[398],{"type":18,"value":399},"Install Melos",{"type":18,"value":65},{"type":12,"tag":37,"props":402,"children":403},{},[404,411],{"type":12,"tag":43,"props":405,"children":408},{"href":406,"rel":407},"https://github.com/Skyost/Bonsoir/archive/refs/heads/master.zip",[47],[409],{"type":18,"value":410},"Clone the repository",{"type":18,"value":65},{"type":12,"tag":37,"props":413,"children":414},{},[415,417,422],{"type":18,"value":416},"Run ",{"type":12,"tag":59,"props":418,"children":419},{"className":5},[420],{"type":18,"value":421},"melos bs",{"type":18,"value":65},{"type":12,"tag":37,"props":424,"children":425},{},[426,428,433,435,440],{"type":18,"value":427},"Go to the ",{"type":12,"tag":59,"props":429,"children":430},{"className":5},[431],{"type":18,"value":432},"packages/bonsoir/example",{"type":18,"value":434}," directory, and run ",{"type":12,"tag":59,"props":436,"children":437},{"className":5},[438],{"type":18,"value":439},"flutter run",{"type":18,"value":65},{"type":12,"tag":13,"props":442,"children":444},{"id":443},"contribute",[445],{"type":18,"value":446},"Contribute",{"type":12,"tag":27,"props":448,"children":449},{},[450],{"type":18,"value":451},"You have a lot of options to contribute to this project ! You can :",{"type":12,"tag":33,"props":453,"children":454},{},[455,467,479],{"type":12,"tag":37,"props":456,"children":457},{},[458,465],{"type":12,"tag":43,"props":459,"children":462},{"href":460,"rel":461},"https://github.com/Skyost/Bonsoir/fork",[47],[463],{"type":18,"value":464},"Fork it",{"type":18,"value":466}," on Github to submit your pull requests.",{"type":12,"tag":37,"props":468,"children":469},{},[470,477],{"type":12,"tag":43,"props":471,"children":474},{"href":472,"rel":473},"https://github.com/Skyost/Bonsoir/issues/new/choose",[47],[475],{"type":18,"value":476},"Submit",{"type":18,"value":478}," a feature request or a bug report.",{"type":12,"tag":37,"props":480,"children":481},{},[482,489],{"type":12,"tag":43,"props":483,"children":486},{"href":484,"rel":485},"https://paypal.me/Skyost",[47],[487],{"type":18,"value":488},"Donate",{"type":18,"value":490}," to the developer.",{"type":12,"tag":13,"props":492,"children":494},{"id":493},"about",[495],{"type":18,"value":496},"About",{"type":12,"tag":27,"props":498,"children":499},{},[500,502,509],{"type":18,"value":501},"This plugin was initially created to use in my game, ",{"type":12,"tag":43,"props":503,"children":506},{"href":504,"rel":505},"https://werewolf.skyost.eu",[47],[507],{"type":18,"value":508},"Mobile Werewolf",{"type":18,"value":510},".\nIt is an unofficial mobile version of the famous board game Mafia / Werewolves.\nIn this game, players can play against each others via Wi-Fi, so Bonsoir allows them to easily broadcast,\ndiscover and join local network parties.",{"type":12,"tag":27,"props":512,"children":513},{},[514,516,523],{"type":18,"value":515},"The hand icon has been created by ",{"type":12,"tag":43,"props":517,"children":520},{"href":518,"rel":519},"https://www.flaticon.com/authors/vitaly-gorbachev",[47],[521],{"type":18,"value":522},"Vitaly Gorbachev",{"type":18,"value":65},{"title":5,"searchDepth":525,"depth":525,"links":526},2,[527,528,529,535,536],{"id":22,"depth":525,"text":25},{"id":115,"depth":525,"text":118},{"id":138,"depth":525,"text":141,"children":530},[531,533,534],{"id":145,"depth":532,"text":148},3,{"id":214,"depth":532,"text":217},{"id":251,"depth":532,"text":254},{"id":282,"depth":525,"text":285},{"id":311,"depth":525,"text":314},"markdown","content:docs.md","content","docs.md","md",{"_path":543,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"long":544,"short":545,"_id":546,"_type":547,"title":548,"_source":539,"_file":549,"_extension":547},"/latest-commit","421fe6959ed0a1039dffc19ede8246416b16a2f0","421fe69","content:latest-commit.json","json","Latest Commit","latest-commit.json",1702662069046]